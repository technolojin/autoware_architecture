name: ObjectRecognitionCLRParallel.pipeline

depends:
  # detector
  - LidarClusteringCameraFusion.pipeline
  - CameraLidarIrregularObject.pipeline
  - DetectionByTracker.module
  # filter
  - VoxelBasedCompareMapFilter.module
  - ObjectLaneletFilter.module
  - RadarFilter.pipeline
  # tracker
  - ObjectTrackingMultiChannel.pipeline
  # predictor
  - ObjectPredictionMapBased.pipeline

nodes:

  - node: detection/compare_map_filter
    element: VoxelBasedCompareMapFilter.module

  # detectors
  - node: detection/clustering
    element: LidarClusteringCameraFusion.pipeline
  - node: detection/irregular_object
    element: CameraLidarIrregularObject.pipeline
  - node: detection/detection_by_tracker
    element: DetectionByTracker.module

  # filter
  - node: detection/object_lanelet_filter
    element: ObjectLaneletFilter.module
  - node: detection/radar
    element: RadarFilter.pipeline

  - node: tracking
    element: ObjectTrackingMultiChannel.pipeline
  - node: prediction
    element: ObjectPredictionMapBased.pipeline

external_interfaces:
  input:
    # map
    - name: pointcloud_map
    - name: vector_map
    - name: traffic_lights
    # lidar
    - name: obstacle_pointcloud
    - name: lidar_ml_objects
    # camera
    - name: rois0
    - name: rois1
    - name: rois2
    - name: rois3
    - name: rois4
    - name: rois5
    - name: rois6
    - name: rois7
    - name: camera_info0
    - name: camera_info1
    - name: camera_info2
    - name: camera_info3
    - name: camera_info4
    - name: camera_info5
    - name: camera_info6
    - name: camera_info7
    # radar
    - name: radar_objects
  output:
    - name: map_filtered_obstacle_pointcloud
    - name: objects
  parameter: []

connections:

  # detection/compare map filter
  - from: input.obstacle_pointcloud
    to: detection/compare_map_filter.input.input
  - from: input.pointcloud_map
    to: detection/compare_map_filter.input.input_map
  - from: detection/compare_map_filter.output.output
    to: output.map_filtered_obstacle_pointcloud

  # detection/clustering
  - from: detection/compare_map_filter.output.output
    to: detection/clustering.input.pointcloud
  - from: input.pointcloud_map
    to: detection/clustering.input.pointcloud_map
  - from: input.rois*
    to: detection/clustering.input.rois*
  - from: input.camera_info*
    to: detection/clustering.input.camera_info*

  # camera-lidar fusion output filtering
  - from: input.vector_map
    to: detection/object_lanelet_filter.input.vector_map
  - from: detection/clustering.output.detected_objects
    to: detection/object_lanelet_filter.input.object


  # detection/irregular object
  - from: input.rois0
    to: detection/irregular_object.input.rois0
  - from: input.rois1
    to: detection/irregular_object.input.rois1
  - from: input.rois5
    to: detection/irregular_object.input.rois2
  - from: input.camera_info0
    to: detection/irregular_object.input.camera_info0
  - from: input.camera_info1
    to: detection/irregular_object.input.camera_info1
  - from: input.camera_info5
    to: detection/irregular_object.input.camera_info2

  # detection/detection by tracker
  - from: tracking.output.objects
    to: detection/detection_by_tracker.input.tracked_objects
  - from: detection/clustering.output.cluster_objects
    to: detection/detection_by_tracker.input.initial_objects

  # detection/radar
  - from: input.vector_map
    to: detection/radar.input.vector_map
  - from: input.radar_objects
    to: detection/radar.input.radar_objects

  # tracking
  - from: input.lidar_ml_objects
    to: tracking.input.lidar_ml_objects
  - from: detection/object_lanelet_filter.output.object
    to: tracking.input.camera_lidar_rule_detector_objects
  - from: detection/irregular_object.output.objects
    to: tracking.input.camera_lidar_irregular_objects
  - from: detection/detection_by_tracker.output.objects
    to: tracking.input.tracker_based_detector_objects
  - from: detection/radar.output.radar_filtered_objects
    to: tracking.input.radar_objects

  # prediction
  - from: tracking.output.objects
    to: prediction.input.tracked_objects
  - from: input.vector_map
    to: prediction.input.vector_map
  - from: input.traffic_lights
    to: prediction.input.traffic_lights
  - from: prediction.output.objects
    to: output.objects
