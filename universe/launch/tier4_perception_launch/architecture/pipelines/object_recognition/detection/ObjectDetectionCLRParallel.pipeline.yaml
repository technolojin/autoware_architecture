name: ObjectDetectionCLRParallel.pipeline

depends:
  # detectors
  - LidarClusteringCameraFusion.pipeline
  - CameraLidarIrregularObject.pipeline
  # filter
  - VoxelBasedCompareMapFilter.module
  - ObjectLaneletFilter.module
  - RadarFilter.pipeline

nodes:
  # compare map filter
  - node: compare_map_filter
    element: VoxelBasedCompareMapFilter.module
  # detectors
  - node: clustering
    element: LidarClusteringCameraFusion.pipeline
  - node: irregular_object
    element: CameraLidarIrregularObject.pipeline


  # filter
  - node: object_lanelet_filter
    element: ObjectLaneletFilter.module

external_interfaces:
  input:
    - name: pointcloud_map
    - name: vector_map
    - name: obstacle_pointcloud
    - name: rois0
    - name: rois1
    - name: rois2
    - name: rois3
    - name: rois4
    - name: rois5
    - name: rois6
    - name: rois7
    - name: camera_info0
    - name: camera_info1
    - name: camera_info2
    - name: camera_info3
    - name: camera_info4
    - name: camera_info5
    - name: camera_info6
    - name: camera_info7

  output:
    - name: filtered_obstacle_pointcloud
    - name: clustering/camera_lidar_fusion/objects
    - name: irregular_object/objects
    - name: cluster_objects

  parameter: []

connections:
  # compare map filter
  - from: input.obstacle_pointcloud
    to: compare_map_filter.input.input
  - from: input.pointcloud_map
    to: compare_map_filter.input.input_map
  - from: compare_map_filter.output.output
    to: output.filtered_obstacle_pointcloud

  # clustering
  - from: compare_map_filter.output.output
    to: clustering.input.pointcloud
  - from: input.pointcloud_map
    to: clustering.input.pointcloud_map
  - from: input.rois*
    to: clustering.input.rois*
  - from: input.camera_info*
    to: clustering.input.camera_info*
  - from: clustering.output.cluster_objects
    to: output.cluster_objects

  # camera-lidar fusion output filtering
  - from: input.vector_map
    to: object_lanelet_filter.input.vector_map
  - from: clustering.output.detected_objects
    to: object_lanelet_filter.input.object
  - from: object_lanelet_filter.output.object
    to: output.clustering/camera_lidar_fusion/objects

  # irregular object
  - from: input.rois0
    to: irregular_object.input.rois0
  - from: input.rois1
    to: irregular_object.input.rois1
  - from: input.rois5
    to: irregular_object.input.rois2
  - from: input.camera_info0
    to: irregular_object.input.camera_info0
  - from: input.camera_info1
    to: irregular_object.input.camera_info1
  - from: input.camera_info5
    to: irregular_object.input.camera_info2
  - from: irregular_object.output.objects
    to: output.irregular_object/objects

