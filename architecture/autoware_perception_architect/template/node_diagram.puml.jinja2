@startuml

title Architecture Diagram {{ name }}

' topic part
skinparam NoteFontSize 6

' logic part
skinparam RectangleFontSize 6
skinparam ControlFontSize 6

' graph visual
skinparam componentStyle rectangle
left to right direction
skinparam dpi 64

<style>
port{FontSize 9}
arrow{
    FontSize 5
    Fontcolor #000066
}
node {BackgroundColor #dddddd}
</style>

{% macro build_instance_graph(instance, depth=0) %}
{% if instance.element_type == "module" %}
{% set dd = "    " * depth %}
{{ dd }}node {{ instance.name }} as {{ instance.unique_id }} {
{{ dd }}    ' ports
{{ dd }}{% for in_port in instance.in_ports %}
{{ dd }}    portin "input/{{ in_port.name }} \n #{{in_port.event.type}}\n @{{in_port.event.frequency}}" as {{ in_port.unique_id }}
{{ dd }}{% endfor %}
{{ dd }}{% for out_port in instance.out_ports %}
{{ dd }}    portout "output/{{ out_port.name }}" as {{ out_port.unique_id }}
{{ dd }}{% endfor %}
{{ dd }}    ' global output
{{ dd }}{% for out_port in instance.out_ports %}
{{ dd }}    {% if out_port.is_global %}
{{ dd }}    cloud "{{ "/" + "/".join(out_port.topic) }}\n @{{out_port.event.frequency}} Hz" as {{ out_port.unique_id }}_cloud
{{ dd }}      {{ out_port.unique_id }} -d-> {{ out_port.unique_id }}_cloud
{{ dd }}    {% else %}
{{ dd }}    note as {{ out_port.unique_id }}_note
{{ dd }}        topic: {{ "/" + "/".join(out_port.topic) }}
{{ dd }}        type: {{ out_port.msg_type }}
{{ dd }}        freq: {{ out_port.event.frequency}} Hz
{{ dd }}        warn: {{ out_port.event.warn_rate }} Hz
{{ dd }}        error: {{ out_port.event.error_rate }} s
{{ dd }}    end note
{{ dd }}    {{ out_port.unique_id }}_note - {{ out_port.unique_id }}
{{ dd }}    {% endif %}
{{ dd }}{% endfor %}
{{ dd }}}
{{ dd }}' global input
{{ dd }}{% for in_port in instance.in_ports %}
{{ dd }}{% if in_port.is_global %}
{{ dd }}cloud "{{ "/" + "/".join(in_port.topic) }}" as {{ in_port.unique_id }}_cloud
{{ dd }}{{ in_port.unique_id }}_cloud -d-> {{ in_port.unique_id }}
{{ dd }}{% endif %}
{{ dd }}{% endfor %}
{{ dd }}{% elif instance.element_type == "pipeline" %}
{{ dd }}frame {{ instance.name }} as {{ instance.unique_id }} {
{{ dd }}    ' port connections
{{ dd }}{% for in_port in instance.in_ports %}
{{ dd }}    portin "input/{{ in_port.name }}" as {{ in_port.unique_id }}
{{ dd }}{% endfor %}
{{ dd }}{% for out_port in instance.out_ports %}
{{ dd }}    portout "output/{{ out_port.name }}" as {{ out_port.unique_id }}
{{ dd }}{% endfor %}
{{ dd }}    ' children
{{ dd }}{% for child in instance.children %}
{{ dd }}{{ build_instance_graph(child, depth + 1) }}
{{ dd }}{% endfor %}
{{ dd }}    ' links
{{ dd }}{% for link in instance.links %}
{{ dd }}    {{ link.from_port.unique_id }} -d-> {{ link.to_port.unique_id }}
{{ dd }}{% endfor %}
{{ dd }}}
{% endif %}
{% endmacro %}


''''''''''''''''
''' instance '''
'''          '''
''''''''''''''''

{% for child in children %}
folder "{{ child.compute_unit}} : {{ child.namespace[0] }}" {
{{ build_instance_graph(child) }}
}

{% endfor %}

{# links -#}
{% for link in links %}
{{ link.from_port.unique_id }} -d-> {{ link.to_port.unique_id }}
{% endfor %}

{# only for the diagram shape -#}
{% for i in range(children|length) %}
{% for j in range(i + 1, children|length) %}
{{ children[i].unique_id }} -[hidden]d- {{ children[j].unique_id }}
{% endfor %}
{% endfor %}

@enduml
