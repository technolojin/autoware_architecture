<?xml version="1.0"?>
<launch>
  <!-- This launch file is auto-generated by the autoware_architect -->
  <!-- Namespace Launcher: {{ namespace }} -->
  <!-- Compute Unit: {{ compute_unit }} -->
  <!-- This launcher starts all components in namespace: {{ namespace }} -->

  <!-- Current namespace -->
  <arg name="ns" description="current namespace"/>

  <!-- Arguments for external interfaces -->
{% for input in external_inputs %}
  <arg name="input/{{ input.name }}" default="{{ input.default_value }}"/>
{% endfor %}
{% for output in external_outputs %}
  <arg name="output/{{ output.name }}" default="{{ output.default_value }}"/>
{% endfor %}

  <!-- Internal interface mappings -->
{% for interface in internal_interfaces %}
  <let name="{{ interface.name }}" value="{{ interface.value }}"/>
{% endfor %}

  <!-- Component includes -->
{% for component in components %}
  <!-- Component: {{ component.name }} ({{ component.element_type }}) -->
{% if component.element_type == "module" %}
  <include file="$(find-pkg-share {{ component.package }})/launcher/{{ component.launcher_file }}">
    <!-- Module: {{ component.name }} -->
{% for arg in component.args %}
    <arg name="{{ arg.name }}" value="{{ arg.value }}"/>
{% endfor %}
{% for input in component.inputs %}
    <arg name="input/{{ input.name }}" value="{{ input.value }}"/>
{% endfor %}
{% for output in component.outputs %}
    <arg name="output/{{ output.name }}" value="{{ output.value }}"/>
{% endfor %}
  </include>

{% elif component.element_type == "pipeline" %}
  <group>
    <push-ros-namespace namespace="{{ component.name }}"/>
    <include file="$(find-pkg-share autoware_perception_deployment)/{{ compute_unit }}/{{ component.namespace_path }}/{{ component.launcher_file }}">
      <!-- Pipeline: {{ component.name }} -->
      <arg name="ns" value="$(var ns)/{{ component.name }}"/>
{% for arg in component.args %}
      <arg name="{{ arg.name }}" value="{{ arg.value }}"/>
{% endfor %}
{% for input in component.inputs %}
      <arg name="input/{{ input.name }}" value="{{ input.value }}"/>
{% endfor %}
{% for output in component.outputs %}
      <arg name="output/{{ output.name }}" value="{{ output.value }}"/>
{% endfor %}
    </include>
  </group>

{% endif %}
{% endfor %}
</launch>