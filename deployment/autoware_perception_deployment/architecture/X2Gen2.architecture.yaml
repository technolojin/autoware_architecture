name: X2Gen2.architecture

depends:
  # dummy
  - LidarDummy.pipeline
  - CameraDummy.pipeline
  - MapDummy.module
  - LocalizationDummy.module
  - PlanningDummy.module

  # perception
  - ObjectSegmentation.pipeline
  - ObjectRecognition.pipeline
  - Camera2dDetection.pipeline
  - OccupancyGridMap.pipeline

components:
  - component: lidar
    element: LidarDummy.pipeline
    namespace: sensing
    compute_unit: perception_ecu_1
  - component: camera
    element: CameraDummy.pipeline
    namespace: sensing
    compute_unit: perception_ecu_2
  - component: map_loader
    element: MapDummy.module
    namespace: map
    compute_unit: dummy_ecu_1
  - component: localizer
    element: LocalizationDummy.module
    namespace: localization
    compute_unit: dummy_ecu_1

  # perception
  - component: object_recognition/detection
    element: Camera2dDetection.pipeline
    namespace: perception
    compute_unit: perception_ecu_2
  - component: object_segmentation
    element: ObjectSegmentation.pipeline
    namespace: perception
    compute_unit: main_ecu
  - component: object_recognition
    element: ObjectRecognition.pipeline
    namespace: perception
    compute_unit: main_ecu
  - component: occupancy_grid_map
    element: OccupancyGridMap.pipeline
    namespace: perception
    compute_unit: main_ecu

  # planner
  - component: planner
    element: PlanningDummy.module
    namespace: planning
    compute_unit: dummy_ecu_2

connections:
  - from: lidar.output.concatenated/pointcloud
    to: object_recognition.input.concatenated_pointcloud
  - from: lidar.output.concatenated/pointcloud
    to: object_segmentation.input.concatenated_pointcloud
  - from: object_segmentation.output.pointcloud
    to: object_recognition.input.obstacle_pointcloud

  - from: camera.output.camera0/image
    to: object_recognition/detection.input.image_raw0
  - from: camera.output.camera1/image
    to: object_recognition/detection.input.image_raw1
  - from: camera.output.camera2/image
    to: object_recognition/detection.input.image_raw2
  - from: camera.output.camera3/image
    to: object_recognition/detection.input.image_raw3
  - from: camera.output.camera4/image
    to: object_recognition/detection.input.image_raw4
  - from: camera.output.camera5/image
    to: object_recognition/detection.input.image_raw5
  - from: camera.output.camera6/image
    to: object_recognition/detection.input.image_raw6
  - from: camera.output.camera7/image
    to: object_recognition/detection.input.image_raw7

  - from: object_recognition/detection.output.rois0
    to: object_recognition.input.rois0
  - from: object_recognition/detection.output.rois1
    to: object_recognition.input.rois1
  - from: object_recognition/detection.output.rois2
    to: object_recognition.input.rois2
  - from: object_recognition/detection.output.rois3
    to: object_recognition.input.rois3
  - from: object_recognition/detection.output.rois4
    to: object_recognition.input.rois4
  - from: object_recognition/detection.output.rois5
    to: object_recognition.input.rois5
  - from: object_recognition/detection.output.rois6
    to: object_recognition.input.rois6
  - from: object_recognition/detection.output.rois7
    to: object_recognition.input.rois7

  - from: camera.output.camera0/camera_info
    to: object_recognition.input.camera_info0
  - from: camera.output.camera1/camera_info
    to: object_recognition.input.camera_info1
  - from: camera.output.camera2/camera_info
    to: object_recognition.input.camera_info2
  - from: camera.output.camera3/camera_info
    to: object_recognition.input.camera_info3
  - from: camera.output.camera4/camera_info
    to: object_recognition.input.camera_info4
  - from: camera.output.camera5/camera_info
    to: object_recognition.input.camera_info5
  - from: camera.output.camera6/camera_info
    to: object_recognition.input.camera_info6
  - from: camera.output.camera7/camera_info
    to: object_recognition.input.camera_info7

  - from: lidar.output.concatenated/pointcloud
    to: occupancy_grid_map.input.concatenated_pointcloud
  - from: object_segmentation.output.pointcloud
    to: occupancy_grid_map.input.obstacle_pointcloud
  - from: occupancy_grid_map.output.map
    to: planner.input.occupancy_grid_map

  - from: map_loader.output.vector_map
    to: localizer.input.lanelet_map
  - from: map_loader.output.vector_map
    to: object_recognition.input.vector_map
  - from: map_loader.output.vector_map
    to: planner.input.lanelet_map
  - from: map_loader.output.pointcloud_map
    to: object_recognition.input.pointcloud_map
  - from: object_recognition.output.objects
    to: planner.input.predicted_objects
